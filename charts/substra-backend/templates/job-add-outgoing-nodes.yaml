{{- range $index, $value := .Values.outgoingNodes }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "substra.fullname" $ }}-add-outgoing-nodes-{{ $index }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/name: {{ template "substra.name" $ }}-add-outgoing-nodes-{{ $index }}
    app.kubernetes.io/part-of: {{ template "substra.name" $ }}
spec:
  template:
    spec:
      {{- with $.Values.backend.image.pullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
      - name: add-outgoing-node
        image: "{{ $.Values.backend.image.repository }}:{{ $.Values.backend.image.tag }}"
        imagePullPolicy: "{{ $.Values.backend.image.pullPolicy }}"
        command: ["python"]
        args: ["manage.py", "create_outgoing_node", {{ .name }}, {{ .secret }}]
        env:
          - name: DJANGO_SETTINGS_MODULE
            value: backend.settings.{{ $.Values.backend.settings }}
          - name: BACKEND_DB_NAME
            value: {{ $.Values.postgresql.postgresqlDatabase }}
          - name: BACKEND_DB_USER
            value: {{ $.Values.postgresql.postgresqlUsername }}
          - name: BACKEND_DB_PWD
            value: {{ $.Values.postgresql.postgresqlPassword }}
          - name: DATABASE_HOST
            value: {{ $.Release.Name }}-postgresql
          - name: PYTHONUNBUFFERED
            value: "1"
      initContainers:
      - name: wait-postgresql
        image: jwilder/dockerize
        command: ['dockerize', '-wait', 'tcp://{{ $.Release.Name }}-postgresql:5432']
      - name: init-migrate
        image: "{{ $.Values.backend.image.repository }}:{{ $.Values.backend.image.tag }}"
        command: ['python', 'manage.py', 'migrate']
        env:
          - name: DJANGO_SETTINGS_MODULE
            value: backend.settings.{{ $.Values.backend.settings }}
          - name: BACKEND_ORG
            value: {{ $.Values.organization.name }}
          - name: BACKEND_DB_NAME
            value: {{ $.Values.postgresql.postgresqlDatabase }}
          - name: BACKEND_DB_USER
            value: {{ $.Values.postgresql.postgresqlUsername }}
          - name: BACKEND_DB_PWD
            value: {{ $.Values.postgresql.postgresqlPassword }}
          - name: DATABASE_HOST
            value: {{ $.Release.Name }}-postgresql
{{- end }}
